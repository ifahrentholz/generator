{"version":3,"sources":["../../src/services/creator.js"],"names":["fs","createFolder","folder","ensureFileSync","message","createFile","file","cName","target","_file","createFileSync","getFileContent","setFileContent","generate","structure","Object","keys","forEach","key"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;IAAYA,E;;AACZ;;;;AACA;;;;;;;;AAGA,IAAIC,eAAe,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC7BF,KAAGG,cAAH,CAAqBD,MAArB;AACA,mBAAOE,OAAP,qBAAiCF,MAAjC;AACD,CAHD;;AAMA,IAAIG,aAAa,SAAbA,UAAa,CAACC,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAyB;AACxC,MAAIC,QAAQD,SAAS,6BAAYF,IAAZ,EAAkBC,KAAlB,EAAyB,SAAzB,CAArB;AACAP,KAAGU,cAAH,CAAkBD,KAAlB;AACA,mBAAOL,OAAP,mBAA+BK,KAA/B;AACD,CAJD;;AAOA,IAAIE,iBAAiB,SAAjBA,cAAiB,CAACL,IAAD,EAAU,CAC9B,CADD;;AAIA,IAAIM,iBAAiB,SAAjBA,cAAiB,CAACN,IAAD,EAAU,CAC9B,CADD;;AAIA,IAAIO,WAAW,SAAXA,QAAW,CAACN,KAAD,EAAQO,SAAR,EAAmBN,MAAnB,EAA8B;AAC3CO,SAAOC,IAAP,CAAYF,SAAZ,EAAuBG,OAAvB,CAA+B,UAACC,GAAD,EAAS;AACtC,QAAI,wBAASJ,UAAUI,GAAV,CAAT,CAAJ,EAA8B;AAC5B,UAAIhB,SAASM,SAASU,GAAtB;AACAjB,mBAAaC,MAAb;AACAW,eAASN,KAAT,EAAgBO,UAAUI,GAAV,CAAhB,EAAgChB,SAAS,GAAzC;AACD,KAJD,MAIO,IAAI,uBAAQY,UAAUI,GAAV,CAAR,CAAJ,EAA6B;AAAA;AAAA;AAAA;;AAAA;AAClC,6BAAiBJ,UAAUI,GAAV,CAAjB,8HAAiC;AAAA,cAAxBZ,IAAwB;;AAC/BD,qBAAWC,IAAX,EAAiBC,KAAjB,EAAwBC,MAAxB;AACD;AAHiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAInC;AAEF,GAXD;AAYD,CAbD;;kBAgBe,UAACD,KAAD,EAAQO,SAAR,EAAqC;AAAA,MAAlBN,MAAkB,uEAAT,IAAS;;AAClD,MAAI,CAACA,MAAL,EAAa;AACXA,aAASD,QAAQ,GAAjB;AACD;AACDM,WAASN,KAAT,EAAgBO,SAAhB,EAA2BN,MAA3B;AACD,C","file":"creator.js","sourcesContent":["import isObject from \"../helper/isObject\";\nimport logger from './logger';\nimport * as fs from \"fs-extra\";\nimport isArray from \"../helper/isArray\";\nimport setFileName from \"../helper/replaceString\";\n\n\nlet createFolder = (folder) => {\n  fs.ensureFileSync(`${folder}/.keep`);\n  logger.message(`created folder ${folder}`);\n};\n\n\nlet createFile = (file, cName, target) => {\n  let _file = target + setFileName(file, cName, \"%cName%\");\n  fs.createFileSync(_file);\n  logger.message(`created file ${_file}`);\n};\n\n\nlet getFileContent = (file) => {\n};\n\n\nlet setFileContent = (file) => {\n};\n\n\nlet generate = (cName, structure, target) => {\n  Object.keys(structure).forEach((key) => {\n    if (isObject(structure[key])) {\n      let folder = target + key;\n      createFolder(folder);\n      generate(cName, structure[key], folder + \"/\");\n    } else if (isArray(structure[key])) {\n      for (let file of structure[key]) {\n        createFile(file, cName, target);\n      }\n    }\n\n  });\n};\n\n\nexport default (cName, structure, target = null) => {\n  if (!target) {\n    target = cName + \"/\";\n  }\n  generate(cName, structure, target);\n};"]}