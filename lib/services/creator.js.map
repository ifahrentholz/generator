{"version":3,"sources":["../../src/services/creator.js"],"names":["fs","path","Creator","cName","structure","target","_file","_folder","_fileName","newFile","Object","keys","forEach","key","msg","ensureFileSync","message","generate","i","length","createFileSync","pa","resolve","__dirname","console","log","c","readFileSync","toString","appendFileSync","destPathString","split","templateId","filter","n","pop"],"mappings":";;;;;;;;AAAA;;IAAYA,E;;AAEZ;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;IAAYC,I;;;;;;;;IAESC,O;;;;;;;6BACHC,K,EAAOC,S,EAAWC,M,EAAQ;AAAA;;AAExC,UAAIC,cAAJ;AAAA,UAAWC,gBAAX;AAAA,UAAoBC,kBAApB;AAAA,UAA+BC,gBAA/B;;AAEA,UAAI,CAACJ,MAAL,EAAa;AACXA,iBAASF,QAAQ,GAAjB;AACD;;AAEDO,aAAOC,IAAP,CAAYP,SAAZ,EAAuBQ,OAAvB,CAA+B,UAACC,GAAD,EAAS;;AAEtC,YAAIC,MAAM,EAAV;;AAEA,YAAI,wBAASV,UAAUS,GAAV,CAAT,CAAJ,EAA8B;AAC5BN,oBAAUF,SAASQ,GAAnB;AACAb,aAAGe,cAAH,CAAqBR,OAArB;AACAO,oCAAwBP,OAAxB;AACA,2BAAOS,OAAP,CAAeF,GAAf;AACA,gBAAKG,QAAL,CAAcd,KAAd,EAAqBC,UAAUS,GAAV,CAArB,EAAqCN,UAAU,GAA/C;AACD,SAND,MAMO;AACL,cAAI,uBAAQH,UAAUS,GAAV,CAAR,CAAJ,EAA6B;AAC3B,iBAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAId,UAAUS,GAAV,EAAeM,MAAnC,EAA2CD,GAA3C,EAAgD;AAC9CV,0BAAY,6BAAcJ,UAAUS,GAAV,EAAeK,CAAf,CAAd,EAAiCf,KAAjC,EAAwC,SAAxC,CAAZ;AACAG,sBAAQD,SAASG,SAAjB;AACAC,wBAAUT,GAAGoB,cAAH,CAAkBd,KAAlB,CAAV;AACA,kBAAIe,KAAKpB,KAAKqB,OAAL,CAAaC,SAAb,EAAwB,gCAAxB,CAAT;AACAC,sBAAQC,GAAR,CAAYJ,EAAZ;AACA,kBAAIK,IAAI1B,GAAG2B,YAAH,CAAgBN,EAAhB,EAAoBO,QAApB,EAAR;AACAJ,sBAAQC,GAAR,CAAYC,CAAZ;AACA1B,iBAAG6B,cAAH,CAAkBvB,KAAlB,EAAyBoB,CAAzB;AACA,kBAAII,iBAAiBzB,OAAO0B,KAAP,CAAa,GAAb,CAArB;AACA,kBAAIC,aAAaF,eAAeG,MAAf,CAAsB,UAACC,CAAD,EAAO;AAC5C,uBAAOA,EAAEf,MAAF,GAAW,CAAlB;AACD,eAFgB,EAEdgB,GAFc,EAAjB;AAGAX,sBAAQC,GAAR,CAAYO,UAAZ;AACAlB,sCAAsBR,KAAtB;AACA,+BAAOU,OAAP,CAAeF,GAAf;AACD;AACF;AACF;AAEF,OAhCD;AAiCD;;;;;;kBA1CkBZ,O","file":"creator.js","sourcesContent":["import * as fs from 'fs-extra';\n\nimport isArray from '../helper/isArray';\nimport isObject from '../helper/isObject';\nimport replaceString from '../helper/replaceString';\nimport logger from './logger';\nimport * as path from \"path\";\n\nexport default class Creator {\n  static generate(cName, structure, target) {\n\n    let _file, _folder, _fileName, newFile;\n\n    if (!target) {\n      target = cName + \"/\";\n    }\n\n    Object.keys(structure).forEach((key) => {\n\n      let msg = '';\n\n      if (isObject(structure[key])) {\n        _folder = target + key;\n        fs.ensureFileSync(`${_folder}/.keep`);\n        msg = `created folder ${_folder}`;\n        logger.message(msg);\n        this.generate(cName, structure[key], _folder + \"/\");\n      } else {\n        if (isArray(structure[key])) {\n          for (let i = 0; i < structure[key].length; i++) {\n            _fileName = replaceString(structure[key][i], cName, \"%cName%\");\n            _file = target + _fileName;\n            newFile = fs.createFileSync(_file);\n            let pa = path.resolve(__dirname, '../../blueprints/bob.config.js');\n            console.log(pa);\n            let c = fs.readFileSync(pa).toString();\n            console.log(c);\n            fs.appendFileSync(_file, c);\n            let destPathString = target.split(\"/\");\n            let templateId = destPathString.filter((n) => {\n              return n.length > 0;\n            }).pop();\n            console.log(templateId);\n            msg = `created file ${_file}`;\n            logger.message(msg);\n          }\n        }\n      }\n\n    });\n  }\n}\n\n"]}